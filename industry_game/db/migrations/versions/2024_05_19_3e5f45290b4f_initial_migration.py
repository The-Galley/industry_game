"""Initial migration

Revision ID: 3e5f45290b4f
Revises:
Create Date: 2024-05-19 15:29:46.054016

"""
from collections.abc import Sequence

import sqlalchemy as sa
from alembic import op
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = "3e5f45290b4f"
down_revision: str | None = None
branch_labels: str | Sequence[str] | None = None
depends_on: str | Sequence[str] | None = None

building_type_enum = postgresql.ENUM(
    "PEOPLE_PRODUCTION",
    "PEOPLE_EDUCATION",
    "RESOURCE_PRODUCTION",
    "RESOURCE_LOGISTIC",
    name="building_types",
)
building_levels_enum = postgresql.ENUM("1", "2", "3", name="building_levels")
user_type_enum = postgresql.ENUM("ADMIN", "PLAYER", name="user_type")
game_status_enum = postgresql.ENUM(
    "CREATED", "STARTED", "PAUSED", "FINISHED", name="game_statuses"
)


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "building",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(length=128), nullable=False),
        sa.Column("type", building_type_enum, nullable=False),
        sa.Column("description", sa.String(length=512), nullable=False),
        sa.Column("icon", sa.String(length=256), nullable=True),
        sa.Column("category", sa.String(length=128), nullable=False),
        sa.Column("level", building_levels_enum, nullable=False),
        sa.Column(
            "properties",
            postgresql.JSONB(astext_type=sa.Text()),
            nullable=False,
        ),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("timezone('utc', now())"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("timezone('utc', now())"),
            nullable=False,
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk__building")),
    )
    op.create_table(
        "user",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("type", user_type_enum, nullable=False),
        sa.Column("username", sa.String(length=128), nullable=False),
        sa.Column("password_hash", sa.String(length=256), nullable=False),
        sa.Column(
            "properties",
            postgresql.JSONB(astext_type=sa.Text()),
            nullable=False,
        ),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("timezone('utc', now())"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("timezone('utc', now())"),
            nullable=False,
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk__user")),
    )
    op.create_index(
        op.f("ix__user__username"), "user", ["username"], unique=True
    )
    op.create_table(
        "game",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(length=128), nullable=False),
        sa.Column("description", sa.String(length=512), nullable=False),
        sa.Column("created_by_id", sa.Integer(), nullable=False),
        sa.Column(
            "status", game_status_enum, server_default="CREATED", nullable=False
        ),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("timezone('utc', now())"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("timezone('utc', now())"),
            nullable=False,
        ),
        sa.Column("started_at", sa.DateTime(timezone=True), nullable=True),
        sa.Column("finished_at", sa.DateTime(timezone=True), nullable=True),
        sa.ForeignKeyConstraint(
            ["created_by_id"],
            ["user.id"],
            name=op.f("fk__game__created_by_id__user"),
            ondelete="CASCADE",
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk__game")),
    )
    op.create_index(
        op.f("ix__game__created_by_id"), "game", ["created_by_id"], unique=False
    )
    op.create_table(
        "user_game_lobby",
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.Column("game_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["game_id"],
            ["game.id"],
            name=op.f("fk__user_game_lobby__game_id__game"),
            ondelete="CASCADE",
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["user.id"],
            name=op.f("fk__user_game_lobby__user_id__user"),
            ondelete="CASCADE",
        ),
        sa.PrimaryKeyConstraint(
            "user_id", "game_id", name=op.f("pk__user_game_lobby")
        ),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("user_game_lobby")
    op.drop_index(op.f("ix__game__created_by_id"), table_name="game")
    op.drop_table("game")
    op.drop_index(op.f("ix__user__username"), table_name="user")
    op.drop_table("user")
    op.drop_table("building")
    bind = op.get_bind()
    building_type_enum.drop(bind)
    building_levels_enum.drop(bind)
    user_type_enum.drop(bind)
    game_status_enum.drop(bind)
    # ### end Alembic commands ###
